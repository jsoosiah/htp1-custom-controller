# This is a basic workflow to help you get started with Actions

name: Publish Release

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  draft-release:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@master
      - uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.package-version.outputs.current-version }}
          allowUpdates: true
          draft: true
          commit: ${{ github.sha }}
  build-electron:
    name: Build Electron
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-10.15]
    
    env:
      GH_TOKEN: ${{secrets.GITHUB_TOKEN}}
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Use Node.js
        uses: actions/setup-node@v1
        with: 
          node-version: 14.x
          
      - run: yarn install
      - run: yarn release

  build-apk:
    name: Build Web and Capacitor APK
    runs-on: ubuntu-20.04
    env:
      GH_TOKEN: ${{secrets.GITHUB_TOKEN}}
      RELEASE_KEYSTORE: ${{secrets.RELEASE_KEYSTORE}}
      RELEASE_KEYSTORE_PASSWORD: ${{secrets.RELEASE_KEYSTORE_PASSWORD}}
      RELEASE_KEY_ALIAS: ${{secrets.RELEASE_KEY_ALIAS}}
      RELEASE_KEY_PASSWORD: ${{secrets.RELEASE_KEY_PASSWORD}}

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - run: yarn install
      - run: yarn run build
      - uses: montudor/action-zip@v1
        with:
          args: zip -qq -r dist.zip dist
      - run: npx cap sync android
      - run: >
          cd android && 
          chmod +x ./gradlew &&
          ./gradlew assembleRelease &&
          cd app/build/outputs/apk/release && 
          echo "${RELEASE_KEYSTORE// /}" | base64 --decode > upload-keystore.jks && 
          ls -l && 
          sudo apt-get update -y &&
          sudo apt-get install apksigner -y &&
          apksigner sign --ks ./upload-keystore.jks --ks-key-alias $RELEASE_KEY_ALIAS --ks-pass pass:$RELEASE_KEYSTORE_PASSWORD --key-pass pass:$RELEASE_KEY_PASSWORD ./app-release-unsigned.apk
      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@master
      - uses: ncipollo/release-action@v1
        with:
          artifacts: "android/app/build/outputs/apk/release/app-release.apk,dist.zip"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.package-version.outputs.current-version }}
          allowUpdates: true
          draft: true
          commit: ${{ github.sha }}
  # TODO: iOS
  # TODO: deploy web app
